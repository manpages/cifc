/* vim: set filetype=javascript : */ 

state = {
  room: featureless_room
};

exports.main = function() {
  return 'On the whole, it wasn\'t worth the trip. The plains were really white and featureless.' +
  'Like pretty much everything here.' +
  '\nFeatureless Game\nInteractive boredom\nRelease 0 / Serial Number 0 / NREPL v0.0.1\n\n' +
  featureless_room().description(state);
}

exports.w = 
exports.west = 
function () {
  if (state.room().west) { 
    state.room = state.room().west(state);
    return exports.look();
  } else {
    return 'You can\'t go that way.';
  }
};

exports.e =
exports.east =
function() {
  if (state.room().east) { 
    state.room = state.room().east(state);
    return exports.look();
  } else {
    return 'You can\'t go that way.';
  }
}

exports.l =
exports.look = 
function() {
  console.log(state.room.name);
  return state.room().description(state);
}

// rooms

function featureless_room() {
  return {
    aliases: [ "featureless" // what to do with aliases that contain spaces?
    ],
    description: function(state) {
      return featureless_room_description() + '\n' +
             objects_in_room_description(state, 
                                         featureless_room,
                                         'However, on the floor of the room you see %%.');
    },
    west: function(state) {
      return room_with_a_view;
    } 
  };
}

function room_with_a_view() {
  return {
    aliases: [ "view" ],
    description: function(state) {
      return room_with_a_view_description() + '\n' +
             objects_in_room_description(state,
                                         room_with_a_view.name)
    },
    east: function(state) {
      return featureless_room;
    }
  }; 
}

// descriptions

function featureless_room_description() {
  return 'Featureless white room is featureless.\nAs always.';
}

function room_with_a_view_description() {
  return 'A room with a view.\n' +
         '“There\'s no one to hurry us through this dream we\'ve found.”';
}

function objects_in_room_description(state, room, template) {
  template = template ? template : 'You see %% here.';
  return template.replace(/%%/, 'nothing');
}
